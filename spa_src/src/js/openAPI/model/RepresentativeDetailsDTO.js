/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AddressDTO from './AddressDTO';

/**
 * The RepresentativeDetailsDTO model module.
 * @module model/RepresentativeDetailsDTO
 * @version v0
 */
class RepresentativeDetailsDTO {
    /**
     * Constructs a new <code>RepresentativeDetailsDTO</code>.
     * @alias module:model/RepresentativeDetailsDTO
     */
    constructor() { 
        
        RepresentativeDetailsDTO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RepresentativeDetailsDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RepresentativeDetailsDTO} obj Optional instance to populate.
     * @return {module:model/RepresentativeDetailsDTO} The populated <code>RepresentativeDetailsDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RepresentativeDetailsDTO();

            if (data.hasOwnProperty('firstName')) {
                obj['firstName'] = ApiClient.convertToType(data['firstName'], 'String');
            }
            if (data.hasOwnProperty('lastName')) {
                obj['lastName'] = ApiClient.convertToType(data['lastName'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('address')) {
                obj['address'] = AddressDTO.constructFromObject(data['address']);
            }
            if (data.hasOwnProperty('phone')) {
                obj['phone'] = ApiClient.convertToType(data['phone'], 'String');
            }
            if (data.hasOwnProperty('creditCardNumber')) {
                obj['creditCardNumber'] = ApiClient.convertToType(data['creditCardNumber'], 'String');
            }
            if (data.hasOwnProperty('paymentMethod')) {
                obj['paymentMethod'] = ApiClient.convertToType(data['paymentMethod'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} firstName
 */
RepresentativeDetailsDTO.prototype['firstName'] = undefined;

/**
 * @member {String} lastName
 */
RepresentativeDetailsDTO.prototype['lastName'] = undefined;

/**
 * @member {String} email
 */
RepresentativeDetailsDTO.prototype['email'] = undefined;

/**
 * @member {module:model/AddressDTO} address
 */
RepresentativeDetailsDTO.prototype['address'] = undefined;

/**
 * @member {String} phone
 */
RepresentativeDetailsDTO.prototype['phone'] = undefined;

/**
 * @member {String} creditCardNumber
 */
RepresentativeDetailsDTO.prototype['creditCardNumber'] = undefined;

/**
 * @member {module:model/RepresentativeDetailsDTO.PaymentMethodEnum} paymentMethod
 */
RepresentativeDetailsDTO.prototype['paymentMethod'] = undefined;





/**
 * Allowed values for the <code>paymentMethod</code> property.
 * @enum {String}
 * @readonly
 */
RepresentativeDetailsDTO['PaymentMethodEnum'] = {

    /**
     * value: "Cash"
     * @const
     */
    "Cash": "Cash",

    /**
     * value: "CreditCard"
     * @const
     */
    "CreditCard": "CreditCard"
};



export default RepresentativeDetailsDTO;

